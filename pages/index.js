import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import { useRouter } from 'next/router'

import Link from 'next/link'
import Prismic from "prismic-javascript"
import { RichText } from "prismic-reactjs";
import { client } from "../prismic-configuration"

export default function Home(props) {

  const home = props.home
  const posts = props.posts

  console.log('\n*** Home ***')
  console.log(home)

  // console.log('\n*** Home.alternate_languages ***')
  // console.log(home.alternate_languages)

  console.log('\n*** Posts.results ***')
  console.log(posts.results)

  console.log('\n*** Posts.results[0].data.body ***')
  console.log(posts.results[0].data.body)

  const router = useRouter()
  const { locale, pathname, asPath, query } = router
  
  return (
    <div className={styles.container}>
      <Head>
        <title>Prismic Next Localized</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <h1>
        <Link href="/" locale={ locale }><a>Prismic Next Dummy Blog</a></Link>
      </h1>

      <p>Current locale: { locale }</p>
      <ul>
        <li><Link href={ router.pathname } locale="en"><a>English</a></Link></li>
        <li><Link href={ router.pathname } locale="it"><a>Italiano</a></Link></li>
          {/* <li><a href={ `/it${ router.pathname }` } className={ locale=='it' ? "selected" : "" }>Italiano</a></li> */}
          {/* <li><a href={ `/en${ router.pathname }` } className={ locale=='en' ? "selected" : "" }>English</a></li> */}
      </ul>

      <div>
        { home && 
          <div>
            {/* <img src={ home.data.image.url } alt="avatar image" height="140px" /> */}
            <Image
              src={ home.data.image.url }
              alt="pic_alt_text"
              width={ 300 }
              height={ 200 }
              objectFit="contain"
            />
            <h1>{ home.data.headline }</h1>
            <p>{ RichText.asText(home.data.description) }</p>
          </div>
        }

        <ul>
          { posts.results && posts.results.map((post) => (
            <li key={ post.uid }>
              <h3>{ post.data.title }</h3>
              <small>Post id: { post.uid }</small>
              <p>{ RichText.asText(post.data.body) }</p>
            </li>
          ))}
        </ul>
      </div>
    </div>
  )
}

export async function getStaticProps(context = {}) {

  // const { locale } = useRouter()
  const { params = {}, locale } = context;
  const prismic_locale = locale=='en' ? 'en-us' : 'it-it'
  
  const home = await client.getSingle("main", { lang: prismic_locale })
  // const posts = await client.getAllByType("post");
  const posts = await client.query(
    Prismic.Predicates.at("document.type", "post"), {
      orderings: "[my.post.date desc]",
      lang: prismic_locale },
  )
  return {
    props: {
      home,
      posts,
    },
  }
}